(window.webpackJsonp=window.webpackJsonp||[]).push([[55],{625:function(n,t,e){"use strict";e.r(t);var a=e(10),i=Object(a.a)({},(function(){var n=this,t=n.$createElement,e=n._self._c||t;return e("ContentSlotsDistributor",{attrs:{"slot-key":n.$parent.slotKey}},[e("h2",{attrs:{id:"qiankun"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#qiankun"}},[n._v("#")]),n._v(" qiankun")]),n._v(" "),e("p",[n._v("qiankun 是一个基于 single-spa 的微前端实现库，旨在帮助大家能更简单、无痛的构建一个生产可用微前端架构系统。")]),n._v(" "),e("p",[n._v("微前端的概念借鉴自后端的微服务，主要是为了解决大型工程在变更、维护、扩展等方面的困难而提出的。目前主流的微前端方案包括以下几个：")]),n._v(" "),e("ul",[e("li",[n._v("iframe")]),n._v(" "),e("li",[n._v("基座模式，主要基于路由分发，qiankun 和 single-spa 就是基于这种模式")]),n._v(" "),e("li",[n._v("组合式集成，即单独构建组件，按需加载，类似 npm 包的形式")]),n._v(" "),e("li",[n._v("EMP，主要基于 Webpack5 Module Federation")]),n._v(" "),e("li",[n._v("Web Components")])]),n._v(" "),e("blockquote",[e("p",[n._v("严格来讲，这些方案都不算是完整的微前端解决方案，它们只是用于解决微前端中运行时容器的相关问题。")])])])}),[],!1,null,null,null);t.default=i.exports}}]);